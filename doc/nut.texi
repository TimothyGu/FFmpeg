\input texinfo @c -*- texinfo -*-

@settitle NUT

@titlepage
@center @titlefont{NUT}
@end titlepage

@top

@contents

@chapter Description
NUT is a low overhead generic container format. It stores audio, video,
subtitle and user-defined streams in a simple, yet efficient, way.

It was created by a group of FFmpeg and MPlayer developers in 2003 and was
finalized in 2008.

The official nut specification is at @url{svn://svn.mplayerhq.hu/nut}. In case
of any differences between this text and the official specification, the
official specification shall prevail.

@chapter Container-specific codec tags

This list enumerates FourCC codes and the codecs they identify.

@itemize
@item
Codecs which are not in this list but have a standard FourCC in AVI can be used
with the AVI FourCC in nut as well.

@item
Codecs which are in this list but are not used with the same FourCC in AVI
should be reported to us! (These cases maybe are typos.)

@item
Codecs which are in this list and in AVI with the same fourcc as well as other
FourCCs, @strong{SHOULD} use the FourCC specified here.

@item
For codecs which do not have a FourCC in AVI nor this list, please contact us
so we can add them to the list.
@end itemize

@section Raw Video

Here, @samp{[x]} means a byte with value x.

@section Generic raw YUVA formats

Since many exotic planar YUVA pixel formats are not considered by the
AVI/QuickTime FourCC lists, the following scheme is adopted for representing
them.

The first two bytes can contain the values:

@table @samp
@item Y1
Only Y
@item Y2
Y+A
@item Y3
YUV
@item Y4
YUVA
@end table

The third byte represents the width and height chroma subsampling values for
the UV planes, that is the amount to shift the luma width/height right to find
the chroma width/height.

The fourth byte is the number of bits used (8, 16, ...).

If the order of bytes is inverted, that means that each component has to be
read big-endian.

@section Raw Audio

The FourCCs described here are not available in AVI.

@multitable @columnfractions .4 .4
@item @code{ALAW}  @tab A-LAW
@item @code{ULAW}  @tab MU-LAW
@item @code{P@var{<type>}@var{<interleaving>}@var{<bits>}} @tab little-endian PCM
@item @code{@var{<bits>}@var{<interleaving>}@var{<type>}P} @tab big-endian PCM
@end multitable

@var{<type>} is @samp{S} for signed integer, @samp{U} for unsigned integer,
@samp{F} for IEEE float.

@var{<interleaving>} is @samp{D} for default, @samp{P} is for planar.

@var{<bits>} is 8/16/24/32.

For example, 
@example
PFD[32]
@end example
would be signed 32 bit little-endian IEEE float.

@section Subtitles

@multitable @columnfractions .4 .4
@item @code{UTF8}   @tab Raw UTF-8
@item @code{SSA[0]} @tab SubStation Alpha
@item @code{DVDS}   @tab DVD subtitles
@item @code{DVBS}   @tab DVB subtitles
@item @code{DVBT}   @tab DVB teletext
@end multitable

@section Raw Data

@multitable @columnfractions .4 .4
@item @code{UTF8}   @tab Raw UTF-8
@end multitable

@section Codecs

@multitable @columnfractions .4 .4
@item @code{3IV1} @tab non-compliant MPEG-4 generated by old 3ivx
@item @code{ASV1} @tab Asus Video
@item @code{ASV2} @tab Asus Video 2
@item @code{CVID} @tab Cinepak
@item @code{CYUV} @tab Creative YUV
@item @code{DIVX} @tab non-compliant MPEG-4 generated by old DivX
@item @code{DUCK} @tab Truemotion 1
@item @code{FFV1} @tab FFmpeg video 1
@item @code{FFVH} @tab FFmpeg Huffyuv
@item @code{H261} @tab ITU H.261
@item @code{H262} @tab ITU H.262
@item @code{H263} @tab ITU H.263
@item @code{H264} @tab ITU H.264
@item @code{HFYU} @tab Huffyuv
@item @code{I263} @tab Intel H.263
@item @code{IV31} @tab Indeo 3.1
@item @code{IV32} @tab Indeo 3.2
@item @code{IV50} @tab Indeo 5.0
@item @code{LJPG} @tab ITU JPEG (lossless)
@item @code{MJLS} @tab ITU JPEG-LS
@item @code{MJPG} @tab ITU JPEG
@item @code{MPG4} @tab MS MPEG-4v1 (not ISO MPEG-4)
@item @code{MP42} @tab MS MPEG-4v2
@item @code{MP43} @tab MS MPEG-4v3
@item @code{MP4V} @tab ISO MPEG-4 Part 2 Video (from old encoders)
@item @code{mpg1} @tab ISO MPEG-1 Video
@item @code{mpg2} @tab ISO MPEG-2 Video
@item @code{MRLE} @tab MS RLE
@item @code{MSVC} @tab MS Video 1
@item @code{RT21} @tab Indeo 2.1
@item @code{RV10} @tab RealVideo 1.0
@item @code{RV20} @tab RealVideo 2.0
@item @code{RV30} @tab RealVideo 3.0
@item @code{RV40} @tab RealVideo 4.0
@item @code{SNOW} @tab FFmpeg Snow
@item @code{SVQ1} @tab Sorenson Video 1
@item @code{SVQ3} @tab Sorenson Video 3
@item @code{theo} @tab Xiph Theora
@item @code{TM20} @tab Truemotion 2.0
@item @code{UMP4} @tab non-compliant MPEG-4 generated by UB Video MPEG-4
@item @code{VCR1} @tab ATI VCR1
@item @code{VP30} @tab VP 3.0
@item @code{VP31} @tab VP 3.1
@item @code{VP50} @tab VP 5.0
@item @code{VP60} @tab VP 6.0
@item @code{VP61} @tab VP 6.1
@item @code{VP62} @tab VP 6.2
@item @code{VP70} @tab VP 7.0
@item @code{WMV1} @tab MS WMV7
@item @code{WMV2} @tab MS WMV8
@item @code{WMV3} @tab MS WMV9
@item @code{WV1F} @tab non-compliant MPEG-4 generated by ?
@item @code{WVC1} @tab VC-1
@item @code{XVID} @tab non-compliant MPEG-4 generated by old Xvid
@item @code{XVIX} @tab non-compliant MPEG-4 generated by old Xvid with interlacing bug
@end multitable

